package com.luciano.tesisplanificatuviaje.utils;

import android.app.Activity;
import android.content.Context;
import android.util.Log;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GoogleApiAvailability;

/**
 * üîß Helper para manejar Google Play Services
 * Ayuda a verificar si est√°n disponibles y manejar errores
 */
public class GooglePlayServicesHelper {
    
    private static final String TAG = "GooglePlayServicesHelper";
    private static final int PLAY_SERVICES_RESOLUTION_REQUEST = 9000;
    
    /**
     * Verifica si Google Play Services est√° disponible
     * @param context Contexto de la aplicaci√≥n
     * @return true si est√° disponible, false en caso contrario
     */
    public static boolean checkPlayServices(Context context) {
        GoogleApiAvailability googleApiAvailability = GoogleApiAvailability.getInstance();
        int resultCode = googleApiAvailability.isGooglePlayServicesAvailable(context);
        
        if (resultCode != ConnectionResult.SUCCESS) {
            Log.w(TAG, "‚ö†Ô∏è Google Play Services no est√° disponible. C√≥digo: " + resultCode);
            return false;
        }
        
        Log.d(TAG, "‚úÖ Google Play Services est√° disponible");
        return true;
    }
    
    /**
     * Verifica y trata de resolver problemas con Google Play Services
     * @param activity Activity desde donde se llama
     * @return true si est√° disponible o se puede resolver, false en caso contrario
     */
    public static boolean checkAndResolvePlayServices(Activity activity) {
        GoogleApiAvailability googleApiAvailability = GoogleApiAvailability.getInstance();
        int resultCode = googleApiAvailability.isGooglePlayServicesAvailable(activity);
        
        if (resultCode != ConnectionResult.SUCCESS) {
            Log.w(TAG, "‚ö†Ô∏è Google Play Services problema detectado. C√≥digo: " + resultCode);
            
            if (googleApiAvailability.isUserResolvableError(resultCode)) {
                Log.i(TAG, "üîÑ Intentando resolver problema de Google Play Services");
                googleApiAvailability.getErrorDialog(activity, resultCode, PLAY_SERVICES_RESOLUTION_REQUEST).show();
                return false;
            } else {
                Log.e(TAG, "‚ùå Este dispositivo no es compatible con Google Play Services");
                return false;
            }
        }
        
        Log.d(TAG, "‚úÖ Google Play Services est√° disponible y funcional");
        return true;
    }
    
    /**
     * Obtiene un mensaje descriptivo del error de Google Play Services
     * @param context Contexto de la aplicaci√≥n
     * @return Mensaje descriptivo del estado
     */
    public static String getPlayServicesStatusMessage(Context context) {
        GoogleApiAvailability googleApiAvailability = GoogleApiAvailability.getInstance();
        int resultCode = googleApiAvailability.isGooglePlayServicesAvailable(context);
        
        switch (resultCode) {
            case ConnectionResult.SUCCESS:
                return "‚úÖ Google Play Services est√° disponible";
            case ConnectionResult.SERVICE_MISSING:
                return "‚ùå Google Play Services no est√° instalado";
            case ConnectionResult.SERVICE_VERSION_UPDATE_REQUIRED:
                return "üîÑ Google Play Services necesita actualizaci√≥n";
            case ConnectionResult.SERVICE_DISABLED:
                return "‚ö†Ô∏è Google Play Services est√° deshabilitado";
            case ConnectionResult.SERVICE_INVALID:
                return "‚ùå Google Play Services no es v√°lido";
            default:
                return "‚ö†Ô∏è Error desconocido con Google Play Services (c√≥digo: " + resultCode + ")";
        }
    }
}
